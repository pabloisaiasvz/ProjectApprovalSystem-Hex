// <auto-generated />
using Infrastructrure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructrure.Migrations
{
    [DbContext(typeof(TemplateContext))]
    [Migration("20240827193652_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Album", (string)null);

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            ArtistaId = 1,
                            GeneroId = 1,
                            Nombre = "Thriller"
                        },
                        new
                        {
                            AlbumId = 2,
                            ArtistaId = 2,
                            GeneroId = 2,
                            Nombre = "24k Magic"
                        },
                        new
                        {
                            AlbumId = 3,
                            ArtistaId = 3,
                            GeneroId = 3,
                            Nombre = "Usa tu imaginacion para este"
                        },
                        new
                        {
                            AlbumId = 4,
                            ArtistaId = 4,
                            GeneroId = 4,
                            Nombre = "Tambien se me fueron las ganas de buscar albumes"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Artista", b =>
                {
                    b.Property<int>("ArtistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArtistaId");

                    b.ToTable("Artista", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistaId = 1,
                            Nombre = "Michael Jackson"
                        },
                        new
                        {
                            ArtistaId = 2,
                            Nombre = "Bruno Mars"
                        },
                        new
                        {
                            ArtistaId = 3,
                            Nombre = "Si lees esto vas a promocionar Proyecto Software"
                        },
                        new
                        {
                            ArtistaId = 4,
                            Nombre = "Se me acabaron las ganas de buscar mas artistas XD"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GeneroId");

                    b.ToTable("Genero", (string)null);

                    b.HasData(
                        new
                        {
                            GeneroId = 1,
                            Nombre = "Pop"
                        },
                        new
                        {
                            GeneroId = 2,
                            Nombre = "Rock"
                        },
                        new
                        {
                            GeneroId = 3,
                            Nombre = "Electronica"
                        },
                        new
                        {
                            GeneroId = 4,
                            Nombre = "Jazz"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Album", b =>
                {
                    b.HasOne("Domain.Entities.Artista", "Artista")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Genero", "Genero")
                        .WithMany("Albums")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Domain.Entities.Artista", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
